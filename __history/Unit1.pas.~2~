unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, REST.Types, REST.Client,
  Data.Bind.Components, Data.Bind.ObjectScope, System.JSON, clsEmployee, System.Generics.Collections;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    employeeIdTxt: TEdit;
    showBtn: TButton;
    RESTClient1: TRESTClient;
    RESTRequest1: TRESTRequest;
    RESTResponse1: TRESTResponse;
    getDataBtn: TButton;
    printDataBtn: TButton;
    allEmployeesListBox: TListBox;
    aEmployeeListBox: TListBox;
    RESTClient2: TRESTClient;
    RESTRequest2: TRESTRequest;
    procedure getDataBtnClick(Sender: TObject);
    procedure printDataBtnClick(Sender: TObject);
    procedure showBtnClick(Sender: TObject);
  private
    { Private declarations }
    employees: TList<TEmployee>;

    procedure GetAllEmployeesData;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.getDataBtnClick(Sender: TObject);
begin
  GetAllEmployeesData;
end;

procedure TForm1.printDataBtnClick(Sender: TObject);
var
  emp: TEmployee;
  str: string;
begin

  allEmployeesListBox.Clear;
  for emp in employees do
  begin
    str := emp.GetId.ToString + ' ' + emp.GetName + ' ' + emp.GetSalary.ToString + ' ' + emp.GetAge.ToString;
    allEmployeesListBox.Items.Add(str);
  end;

end;

procedure TForm1.showBtnClick(Sender: TObject);
var
  getId: string;
  jsv: TJSONValue;
  jsit: TJSONValue;
  id: Integer;
  name: string;
  salary: Double;
  age: Integer;
  url: string;

begin

    aEmployeeListBox.Clear;
    getId := employeeIdTxt.Text;

    try

    url :=  RESTClient2.BaseURL;
    RESTClient2.BaseURL := RESTClient2.BaseURL + '/' + getId;
    RESTRequest2.Execute;
    RESTClient2.BaseURL := url;

      try
        if RESTResponse1.StatusCode = 200 then
        begin

          jsv := TJSONObject.ParseJSONValue(RESTResponse1.Content);
          jsit := jsv.FindValue('data');

          id := jsit.GetValue<Integer>('id');
          name := jsit.GetValue<string>('employee_name');
          salary := jsit.GetValue<Double>('employee_salary');
          age := jsit.GetValue<Integer>('employee_age');

          aEmployeeListBox.Items.Add('ID: ' + id.ToString);
          aEmployeeListBox.Items.Add('Name: ' + name);
          aEmployeeListBox.Items.Add('Salary: ' + salary.ToString);
          aEmployeeListBox.Items.Add('Age: ' + age.ToString);
        end;

      except
          on e: Exception do
            ShowMessage(e.Message);
      end;

    except
      on e: Exception do
        ShowMessage(e.Message);
    end;



end;

procedure TForm1.GetAllEmployeesData;
var
  jsVl: TJSONValue;
  jsAr: TJSONArray;
  jsIt: TJSONValue;
  emp: TEmployee;
  empId: Integer;
  empName: string;
  empSalary: Double;
  empAge: Integer;

begin

  try

    RESTRequest1.Execute;

    if RESTResponse1.StatusCode = 200 then
    begin

      jsVl := TJSONObject.ParseJSONValue(RESTResponse1.Content);
      employees := TList<TEmployee>.Create;

      try
        jsAr := jsVl.FindValue('data') as TJSONArray;

        for jsIt in jsAr do
        begin
          empId := jsIt.GetValue<Integer>('id');
          empName := jsIt.GetValue<string>('employee_name');
          empSalary := jsIt.GetValue<Double>('employee_salary');
          empAge := jsIt.GetValue<Integer>('employee_age');

          emp := TEmployee.Create(empId, empName, empSalary, empAge);
          employees.Add(emp);
        end;

        ShowMessage('Success!');
        printDataBtn.Enabled := true;

      finally
        jsVl.Free;
        if Assigned(emp) then
          emp.Free;
      end;

    end
    else
      ShowMessage('Error on Response');

  except

    on Exception do
    begin
      ShowMessage('Error on execution!');
    end;

  end;
end;

end.
